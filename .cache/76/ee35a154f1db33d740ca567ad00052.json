{"id":"qQ7E","dependencies":[{"name":"./_to-integer","loc":{"line":1,"column":24},"parent":"/Users/thanatos/projects/memory/node_modules/core-js/library/modules/_string-at.js","resolved":"/Users/thanatos/projects/memory/node_modules/core-js/library/modules/_to-integer.js"},{"name":"./_defined","loc":{"line":2,"column":22},"parent":"/Users/thanatos/projects/memory/node_modules/core-js/library/modules/_string-at.js","resolved":"/Users/thanatos/projects/memory/node_modules/core-js/library/modules/_defined.js"}],"generated":{"js":"var toInteger = require('./_to-integer');\n\nvar defined = require('./_defined'); // true  -> String#at\n// false -> String#codePointAt\n\n\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};","map":null},"hash":"ba61f59920204d0c647b8a41dc78ab65","cacheData":{"env":{}}}