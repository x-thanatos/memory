{"id":"N9Lu","dependencies":[{"name":"./_library","loc":{"line":2,"column":22},"parent":"/Users/thanatos/projects/memory/node_modules/core-js/library/modules/_iter-define.js","resolved":"/Users/thanatos/projects/memory/node_modules/core-js/library/modules/_library.js"},{"name":"./_export","loc":{"line":3,"column":22},"parent":"/Users/thanatos/projects/memory/node_modules/core-js/library/modules/_iter-define.js","resolved":"/Users/thanatos/projects/memory/node_modules/core-js/library/modules/_export.js"},{"name":"./_redefine","loc":{"line":4,"column":23},"parent":"/Users/thanatos/projects/memory/node_modules/core-js/library/modules/_iter-define.js","resolved":"/Users/thanatos/projects/memory/node_modules/core-js/library/modules/_redefine.js"},{"name":"./_hide","loc":{"line":5,"column":19},"parent":"/Users/thanatos/projects/memory/node_modules/core-js/library/modules/_iter-define.js","resolved":"/Users/thanatos/projects/memory/node_modules/core-js/library/modules/_hide.js"},{"name":"./_iterators","loc":{"line":6,"column":24},"parent":"/Users/thanatos/projects/memory/node_modules/core-js/library/modules/_iter-define.js","resolved":"/Users/thanatos/projects/memory/node_modules/core-js/library/modules/_iterators.js"},{"name":"./_iter-create","loc":{"line":7,"column":26},"parent":"/Users/thanatos/projects/memory/node_modules/core-js/library/modules/_iter-define.js","resolved":"/Users/thanatos/projects/memory/node_modules/core-js/library/modules/_iter-create.js"},{"name":"./_set-to-string-tag","loc":{"line":8,"column":29},"parent":"/Users/thanatos/projects/memory/node_modules/core-js/library/modules/_iter-define.js","resolved":"/Users/thanatos/projects/memory/node_modules/core-js/library/modules/_set-to-string-tag.js"},{"name":"./_object-gpo","loc":{"line":9,"column":29},"parent":"/Users/thanatos/projects/memory/node_modules/core-js/library/modules/_iter-define.js","resolved":"/Users/thanatos/projects/memory/node_modules/core-js/library/modules/_object-gpo.js"},{"name":"./_wks","loc":{"line":10,"column":23},"parent":"/Users/thanatos/projects/memory/node_modules/core-js/library/modules/_iter-define.js","resolved":"/Users/thanatos/projects/memory/node_modules/core-js/library/modules/_wks.js"}],"generated":{"js":"'use strict';\n\nvar LIBRARY = require('./_library');\n\nvar $export = require('./_export');\n\nvar redefine = require('./_redefine');\n\nvar hide = require('./_hide');\n\nvar Iterators = require('./_iterators');\n\nvar $iterCreate = require('./_iter-create');\n\nvar setToStringTag = require('./_set-to-string-tag');\n\nvar getPrototypeOf = require('./_object-gpo');\n\nvar ITERATOR = require('./_wks')('iterator');\n\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\n\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function returnThis() {\n  return this;\n};\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n\n  var getMethod = function getMethod(kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n\n    switch (kind) {\n      case KEYS:\n        return function keys() {\n          return new Constructor(this, kind);\n        };\n\n      case VALUES:\n        return function values() {\n          return new Constructor(this, kind);\n        };\n    }\n\n    return function entries() {\n      return new Constructor(this, kind);\n    };\n  };\n\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype; // Fix native\n\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true); // fix for some old engines\n\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  } // fix Array#{values, @@iterator}.name in V8 / FF\n\n\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n\n    $default = function values() {\n      return $native.call(this);\n    };\n  } // Define iterator\n\n\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  } // Plug for library\n\n\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n\n  return methods;\n};","map":null},"hash":"bfc4dc21c2503e28a5005c2206540b42","cacheData":{"env":{}}}