{"id":"SPjK","dependencies":[{"name":"./_a-function","loc":{"line":2,"column":24},"parent":"/Users/thanatos/projects/memory/node_modules/core-js/library/modules/_bind.js","resolved":"/Users/thanatos/projects/memory/node_modules/core-js/library/modules/_a-function.js"},{"name":"./_is-object","loc":{"line":3,"column":23},"parent":"/Users/thanatos/projects/memory/node_modules/core-js/library/modules/_bind.js","resolved":"/Users/thanatos/projects/memory/node_modules/core-js/library/modules/_is-object.js"},{"name":"./_invoke","loc":{"line":4,"column":21},"parent":"/Users/thanatos/projects/memory/node_modules/core-js/library/modules/_bind.js","resolved":"/Users/thanatos/projects/memory/node_modules/core-js/library/modules/_invoke.js"}],"generated":{"js":"'use strict';\n\nvar aFunction = require('./_a-function');\n\nvar isObject = require('./_is-object');\n\nvar invoke = require('./_invoke');\n\nvar arraySlice = [].slice;\nvar factories = {};\n\nvar construct = function construct(F, len, args) {\n  if (!(len in factories)) {\n    for (var n = [], i = 0; i < len; i++) {\n      n[i] = 'a[' + i + ']';\n    } // eslint-disable-next-line no-new-func\n\n\n    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');\n  }\n\n  return factories[len](F, args);\n};\n\nmodule.exports = Function.bind || function bind(that\n/* , ...args */\n) {\n  var fn = aFunction(this);\n  var partArgs = arraySlice.call(arguments, 1);\n\n  var bound = function bound()\n  /* args... */\n  {\n    var args = partArgs.concat(arraySlice.call(arguments));\n    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);\n  };\n\n  if (isObject(fn.prototype)) bound.prototype = fn.prototype;\n  return bound;\n};","map":null},"hash":"cfcb8d115365b1943911445d9228bf82","cacheData":{"env":{}}}