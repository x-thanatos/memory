{"id":"72eW","dependencies":[{"name":"../core-js/promise","loc":{"line":1,"column":23},"parent":"/Users/thanatos/projects/memory/node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator.js","resolved":"/Users/thanatos/projects/memory/node_modules/@babel/runtime-corejs2/core-js/promise.js"}],"generated":{"js":"var _Promise = require(\"../core-js/promise\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    _Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new _Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","map":null},"hash":"fc8fad3bc903a872f86bf61a4ddd14ee","cacheData":{"env":{}}}