{"id":"rYgc","dependencies":[{"name":"../core-js/symbol/iterator","loc":{"line":1,"column":31},"parent":"/Users/thanatos/projects/memory/node_modules/@babel/runtime-corejs2/helpers/typeof.js","resolved":"/Users/thanatos/projects/memory/node_modules/@babel/runtime-corejs2/core-js/symbol/iterator.js"},{"name":"../core-js/symbol","loc":{"line":3,"column":22},"parent":"/Users/thanatos/projects/memory/node_modules/@babel/runtime-corejs2/helpers/typeof.js","resolved":"/Users/thanatos/projects/memory/node_modules/@babel/runtime-corejs2/core-js/symbol.js"}],"generated":{"js":"function _typeof3(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof3 = function _typeof3(obj) { return typeof obj; }; } else { _typeof3 = function _typeof3(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof3(obj); }\n\nvar _Symbol$iterator = require(\"../core-js/symbol/iterator\");\n\nvar _Symbol = require(\"../core-js/symbol\");\n\nfunction _typeof2(obj) {\n  if (typeof _Symbol === \"function\" && _typeof3(_Symbol$iterator) === \"symbol\") {\n    _typeof2 = function _typeof2(obj) {\n      return _typeof3(obj);\n    };\n  } else {\n    _typeof2 = function _typeof2(obj) {\n      return obj && typeof _Symbol === \"function\" && obj.constructor === _Symbol && obj !== _Symbol.prototype ? \"symbol\" : _typeof3(obj);\n    };\n  }\n\n  return _typeof2(obj);\n}\n\nfunction _typeof(obj) {\n  if (typeof _Symbol === \"function\" && _typeof2(_Symbol$iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof _Symbol === \"function\" && obj.constructor === _Symbol && obj !== _Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","map":null},"hash":"f0f53718686fadd48c1494ba3deafc11","cacheData":{"env":{}}}