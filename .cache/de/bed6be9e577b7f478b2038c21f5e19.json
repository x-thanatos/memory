{"id":"lcFA","dependencies":[{"name":"./_export","loc":{"line":3,"column":22},"parent":"/Users/thanatos/projects/memory/node_modules/core-js/library/modules/es7.promise.try.js","resolved":"/Users/thanatos/projects/memory/node_modules/core-js/library/modules/_export.js"},{"name":"./_new-promise-capability","loc":{"line":4,"column":35},"parent":"/Users/thanatos/projects/memory/node_modules/core-js/library/modules/es7.promise.try.js","resolved":"/Users/thanatos/projects/memory/node_modules/core-js/library/modules/_new-promise-capability.js"},{"name":"./_perform","loc":{"line":5,"column":22},"parent":"/Users/thanatos/projects/memory/node_modules/core-js/library/modules/es7.promise.try.js","resolved":"/Users/thanatos/projects/memory/node_modules/core-js/library/modules/_perform.js"}],"generated":{"js":"'use strict'; // https://github.com/tc39/proposal-promise-try\n\nvar $export = require('./_export');\n\nvar newPromiseCapability = require('./_new-promise-capability');\n\nvar perform = require('./_perform');\n\n$export($export.S, 'Promise', {\n  'try': function _try(callbackfn) {\n    var promiseCapability = newPromiseCapability.f(this);\n    var result = perform(callbackfn);\n    (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);\n    return promiseCapability.promise;\n  }\n});","map":null},"hash":"0e961752fbc8fc6e2cb9319e78dcf877","cacheData":{"env":{}}}